# print(type('a'))

from math import sqrt

class Point:
    def __init__(self, x = 0.0, y = 0.0):
        self.x = x
        self.y = y
        print(self.x)
        print(self.y)
#     def difference(self, point=None):
#         if not point:
#             point = Point()
#         return sqrt((self.x - point.x) **2 + (self.y - point.y) **2)
# print(sqrt)


Point()


'''
【クラスとは、、、】= 設計図
int型とは整数という概念を記述した設計図 = クラス 
「型」= 設計図 = クラス( = 仕組み = 機構)
そうしたクラスを、Pythonではプログラマーが独自( = 特有 = 専用の型 = 整数型だったり、文字列型だったり )に作成する事が出来る

【オブジェクトとは、、、】プログラムによって作成られた何らかのデータ( = ファイルだったり、ウィンドウだったり、ゲームだったり)
いちばんやさしいPython入門を拝借して例えると、lesson_7-9で作成したプログラムをVScodeで実行し、コンピュータのメモリに
作成されたデータ( = ウィンドウが表示され、その中で丸い円が動き回るプログラム)のこと？
ここで、クラスを自分にとって分かりやすく例えると、クラスとは、オブジェクトを作成するためのプログラム( = classで作成した関数)

【インスタンスとは、、、】プログラムによってメモリ上に作成され、メモリ上に存在する実態である事を強調した言い方
あるクラスの設計図から作り出され、メモリ上に存在する実態である事を強調する為、「インスタンス」と呼ぶ事がある。

===========================================================================================================

クラスで作成した関数の定義外では、作成した関数の中に、クラスで作成した変数を(第1パラメーターに「self.」と入れても)入れても使うことは出来ない。

''' 


# def difference(point=None):
#     if not point:
#         point = Point()
#     return sqrt(self, (self.x - point.x) **2 + (self.y - point.y) **2)
